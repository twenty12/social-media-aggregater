[{"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/index.tsx":"1","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/reportWebVitals.ts":"2","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/App.tsx":"3","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/index.tsx":"4","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/posts.tsx":"5","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/store.tsx":"6","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/reducer.tsx":"7","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/Header.tsx":"8","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/mock_data.js":"9","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/Feed.tsx":"10","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/teams.tsx":"11","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/PostCard.tsx":"12"},{"size":278,"mtime":1607371277059,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607181552009,"results":"15","hashOfConfig":"14"},{"size":518,"mtime":1607269927937,"results":"16","hashOfConfig":"14"},{"size":279,"mtime":1607191502951,"results":"17","hashOfConfig":"14"},{"size":1257,"mtime":1607360507298,"results":"18","hashOfConfig":"14"},{"size":428,"mtime":1607371257143,"results":"19","hashOfConfig":"14"},{"size":286,"mtime":1607272361902,"results":"20","hashOfConfig":"14"},{"size":372,"mtime":1607210413240,"results":"21","hashOfConfig":"14"},{"size":1465,"mtime":1607363063919,"results":"22","hashOfConfig":"14"},{"size":1557,"mtime":1607362609795,"results":"23","hashOfConfig":"14"},{"size":1731,"mtime":1607363068180,"results":"24","hashOfConfig":"14"},{"size":1670,"mtime":1607370390562,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fzd65k",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/index.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/reportWebVitals.ts",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/App.tsx",["57","58"],"import React, { useEffect } from 'react';\nimport NavBar from \"./features/Header\"\nimport Feed from \"./features/feed/Feed\"\nimport './App.css';\nimport { loadPosts } from \"./redux/modules/posts\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport './index.css';\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            <NavBar />\n            <button onClick={() => dispatch(loadPosts() as any)}>Load em</button>\n            <Feed />\n        </div>\n    );\n}\n\nexport default App;\n",["59","60"],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/index.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/posts.tsx",["61","62","63"],"import { typedAction } from './index';\nimport { Dispatch, AnyAction, createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\"\n\nimport {feedUpdate} from \"./mock_data\"\n\nexport type Post = {\n    id: number,\n    source: string,\n    publishTime: string,\n    title: string,\n    description: string,\n    image: string,\n    url: string\n    sourceId?: string,\n    boatId?: number,\n    sailorId?: number\n}\n\nexport type PostState = {\n    posts: Post[];\n    loading: boolean;\n};\n\nconst initialState: PostState = {\n    posts: [],\n    loading: true,\n};\n\nexport const addPosts = (products: Post[]) => {\n    return typedAction('posts/ADD_POSTS', products);\n};\n\nexport const loadPosts = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        setTimeout(() => {\n            dispatch(\n                addPosts(feedUpdate['posts'])\n            );\n        }, 1000);\n    };\n};\n\ntype PostAction = ReturnType<typeof addPosts>;\n\nexport function postReducer(\n    state = initialState,\n    action: PostAction\n): PostState {\n    switch (action.type) {\n        case 'posts/ADD_POSTS':\n            return {\n                ...state,\n                posts: [...state.posts, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/store.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/reducer.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/Header.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/mock_data.js",[],["64","65"],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/Feed.tsx",["66"],"import React, {useEffect, FunctionComponent} from 'react'\nimport PostCard from './PostCard'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { loadPosts } from \"../../redux/modules/posts\"\nimport { loadBoats, loadSailors } from \"../../redux/modules/teams\"\n\nimport {RootState} from \"../../redux/reducer\"\n\nconst arrToObjKeyedById = (arr: any) => {\n    return arr.reduce(function(acc: any, cur: any, i: number) {\n        acc[cur['id']] = cur;\n        return acc;\n      }, {});\n}\n\nconst Feed: FunctionComponent = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadPosts() as any)\n        dispatch(loadSailors() as any)\n        dispatch(loadBoats() as any)\n    }, [])\n    const posts = useSelector( (state: RootState) => state.post.posts)\n    const sailors = arrToObjKeyedById(\n        useSelector( (state: RootState) => state.team.sailors))\n    const boats = arrToObjKeyedById(\n        useSelector( (state: RootState) => state.team.boats))\n    const postItems = posts.map((post) => {\n        const getSailorDataWhenOnceAvailable = () => (Object.keys(sailors).length === 0) ? {} : sailors[post.sailorId!]\n        const getBoatDataWhenOnceAvailable = () => (Object.keys(boats).length === 0) ? {} : boats[post.boatId!]\n        return <PostCard\n            postData={post}\n            sailorData={getSailorDataWhenOnceAvailable()}\n            boatData={getBoatDataWhenOnceAvailable()}/>\n      })\n      return (\n        <div className=\"container\">\n                {postItems}\n        </div>\n    )\n}\n\nexport default Feed","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/teams.tsx",["67","68","69"],"import { typedAction } from './index';\nimport { Dispatch, AnyAction, createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\"\n\nimport {sailorData, boatData} from \"./mock_data\"\n\nexport type Sailor = {\n    id: number,\n    name: string,\n    gender: string\n    age: number,\n    boatId: number\n}\n\n\nexport type Boat = {\n    id: number,\n    name: string,\n    position: number,\n    flag: string\n}\n\nexport type TeamState = {\n    sailors: Sailor[],\n    boats: Boat[]\n};\n\nconst initialState: TeamState = {\n    boats: [],\n    sailors: []\n};\n\nexport const addSailor = (sailor:Sailor[]) => {\n    return typedAction('teams/ADD_SAILOR', sailor);\n};\n\nexport const addBoat = (boat:Boat[]) => {\n    return typedAction('teams/ADD_BOAT', boat);\n};\n\nexport const loadBoats = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        setTimeout(() => {\n            dispatch(\n                addBoat(boatData['boats'])\n            );\n        }, 1000);\n    };\n};\n\nexport const loadSailors = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        setTimeout(() => {\n            dispatch(\n                addSailor(sailorData['sailors'])\n            );\n        }, 1000);\n    };\n};\n\ntype ActionType = ReturnType<typeof addBoat> | ReturnType<typeof addSailor>;\n\n\n\nexport function teamReducer(state = initialState, action: ActionType) {\n    switch (action.type) {\n        case 'teams/ADD_SAILOR':\n            return {\n                ...state,\n                sailors: [...state.sailors, ...action.payload],\n            };\n        case 'teams/ADD_BOAT':\n            return {\n                ...state,\n                boats: [...state.boats, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/PostCard.tsx",["70"],"import React, { FunctionComponent } from \"react\"\nimport { Post } from '../../redux/modules/posts'\nimport { Boat, Sailor } from '../../redux/modules/teams'\n\ntype PostProps = {\n    postData: Post,\n    sailorData: Boat,\n    boatData: Sailor\n}\ntype EmojiProps = {\n    flag: string,\n}\n\nvar nameToEmoji: { [key: string]: string; } = {\n    UK: '🇬🇧'\n};\n\n\n//TODO figure out why boatdata is now wokring\nconst PostCard: FunctionComponent<PostProps> = ({ postData, sailorData, boatData }) => {\n    // console.log(type boatData)\n    return (\n        <div key={postData.id} className=\"row justify-content-center\">\n            <div className=\"my-2 col-8\">\n                <div className=\"card border-dark\">\n                    <div className=\"card-header bg-white border-0\">\n                        <div className=\"d-flex\">\n                            <div className=\"mr-auto\">{sailorData.name}</div>\n                            <div>{nameToEmoji['UK']}</div>\n                        </div>\n                        <small>Boat: Position: 4 Flag: </small>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"embed-responsive embed-responsive-16by9\">\n                        <iframe\n                            className=\"embed-responsive-item border-0\"\n                            src={`https://www.youtube.com/embed/${postData.sourceId}`}\n                            allow='autoplay; encrypted-media'\n                            title='video'\n                        />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default PostCard",{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":6,"column":9,"nodeType":"73","messageId":"74","endLine":6,"endColumn":20},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"80","line":2,"column":31,"nodeType":"73","messageId":"74","endLine":2,"endColumn":42},{"ruleId":"71","severity":1,"message":"81","line":2,"column":44,"nodeType":"73","messageId":"74","endLine":2,"endColumn":59},{"ruleId":"71","severity":1,"message":"82","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":13},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"83","severity":1,"message":"84","line":22,"column":8,"nodeType":"85","endLine":22,"endColumn":10,"suggestions":"86"},{"ruleId":"71","severity":1,"message":"80","line":2,"column":31,"nodeType":"73","messageId":"74","endLine":2,"endColumn":42},{"ruleId":"71","severity":1,"message":"81","line":2,"column":44,"nodeType":"73","messageId":"74","endLine":2,"endColumn":59},{"ruleId":"71","severity":1,"message":"82","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":13},{"ruleId":"71","severity":1,"message":"87","line":10,"column":6,"nodeType":"73","messageId":"74","endLine":10,"endColumn":16},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"'createStore' is defined but never used.","'applyMiddleware' is defined but never used.","'thunk' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'EmojiProps' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [dispatch]",{"range":"93","text":"94"},[706,708],"[dispatch]"]