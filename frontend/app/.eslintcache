[{"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/index.tsx":"1","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/reportWebVitals.ts":"2","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/App.tsx":"3","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/index.tsx":"4","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/posts.tsx":"5","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/store.tsx":"6","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/reducer.tsx":"7","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/Header.tsx":"8","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/Feed.tsx":"9","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/teams.tsx":"10","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/PostCard.tsx":"11"},{"size":278,"mtime":1607371277059,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607181552009,"results":"14","hashOfConfig":"13"},{"size":498,"mtime":1607718843450,"results":"15","hashOfConfig":"13"},{"size":279,"mtime":1607191502951,"results":"16","hashOfConfig":"13"},{"size":1497,"mtime":1607722060102,"results":"17","hashOfConfig":"13"},{"size":428,"mtime":1607371257143,"results":"18","hashOfConfig":"13"},{"size":286,"mtime":1607272361902,"results":"19","hashOfConfig":"13"},{"size":372,"mtime":1607210413240,"results":"20","hashOfConfig":"13"},{"size":1623,"mtime":1607786697318,"results":"21","hashOfConfig":"13"},{"size":2019,"mtime":1607801513955,"results":"22","hashOfConfig":"13"},{"size":1922,"mtime":1607801719726,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"fzd65k",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/index.tsx",[],["50","51"],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/reportWebVitals.ts",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/App.tsx",["52","53"],"import React from 'react';\nimport NavBar from \"./features/Header\"\nimport Feed from \"./features/feed/Feed\"\nimport './App.css';\nimport { loadPosts } from \"./redux/modules/posts\"\nimport {useDispatch} from \"react-redux\"\nimport './index.css';\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            <NavBar />\n            {/* <button onClick={() => dispatch(loadPosts() as any)}>Load em</button> */}\n            <Feed />\n        </div>\n    );\n}\n\nexport default App;\n","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/index.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/posts.tsx",["54","55"],"import { typedAction } from './index';\nimport { Dispatch, AnyAction } from 'redux';\nimport { createImportSpecifier } from 'typescript';\n\n\nexport type Post = {\n    id: number,\n    account: number,\n    created: string,\n    collected: string,\n    title: string,\n    description: string,\n    url: string\n    source_id?: string,\n}\n\nexport type PostState = {\n    posts: Post[];\n    loading: boolean;\n};\n\nconst initialState: PostState = {\n    posts: [],\n    loading: true,\n};\n\nconst getServerUrl = () => {\n    if (process.env.NODE_ENV == 'development') {\n        return 'http://localhost:8000/'\n    } else {\n        return 'https://social-media-aggregater.herokuapp.com/'\n    }\n}\n\nexport const addPosts = (products: Post[]) => {\n    return typedAction('posts/ADD_POSTS', products);\n};\n\nexport const loadPosts = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        fetch(getServerUrl() + \"api/posts/\")\n            .then(res => res.json())\n            .then((result) => {\n                dispatch(\n                    addPosts(result['results'])\n                );\n            })\n    };\n};\n\ntype PostAction = ReturnType<typeof addPosts>;\n\nexport function postReducer(\n    state = initialState,\n    action: PostAction\n): PostState {\n    switch (action.type) {\n        case 'posts/ADD_POSTS':\n            return {\n                ...state,\n                loading: false,\n                posts: [...state.posts, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/store.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/reducer.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/Header.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/Feed.tsx",["56"],"import React, { useEffect, FunctionComponent } from 'react'\nimport PostCard from './PostCard'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { loadPosts } from \"../../redux/modules/posts\"\nimport { loadAccounts } from \"../../redux/modules/teams\"\nimport { RootState } from \"../../redux/reducer\"\n\nconst arrToObjKeyedById = (arr: any) => {\n    return arr.reduce(function (acc: any, cur: any, i: number) {\n        acc[cur['id']] = cur;\n        return acc;\n    }, {});\n}\n\nconst Feed: FunctionComponent = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadAccounts() as any)\n        dispatch(loadPosts() as any)\n        // dispatch(loadBoats() as any)\n    }, [])\n    const posts = useSelector((state: RootState) => state.post.posts)\n    const loading = useSelector((state: RootState) => state.post.loading)\n    const accounts = arrToObjKeyedById(\n        useSelector((state: RootState) => state.team.accounts))\n\n    const postItems = posts.map((post) => {\n        const getAccountDataWhenOnceAvailable = () => (Object.keys(accounts).length === 0) ? {} : accounts[post.account!]\n        // const getBoatDataWhenOnceAvailable = () => (Object.keys(boats).length === 0) ? {} : boats[post.boatId!]\n        return <PostCard\n            postData={post}\n            accountData={getAccountDataWhenOnceAvailable()} />\n        // boatData={getBoatDataWhenOnceAvailable()}/>\n    })\n    if (loading) {\n        return <h1>Loading...</h1>\n    } else {\n        return (\n            <div className=\"container\">\n                {postItems}\n            </div>\n        )\n    }\n}\n\nexport default Feed","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/teams.tsx",["57"],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/PostCard.tsx",["58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":10,"column":11,"nodeType":"65","messageId":"66","endLine":10,"endColumn":19},{"ruleId":"63","severity":1,"message":"68","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":31},{"ruleId":"69","severity":1,"message":"70","line":28,"column":30,"nodeType":"71","messageId":"72","endLine":28,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":21,"column":8,"nodeType":"75","endLine":21,"endColumn":10,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":30,"nodeType":"71","messageId":"72","endLine":4,"endColumn":32},{"ruleId":"69","severity":1,"message":"77","line":21,"column":45,"nodeType":"71","messageId":"72","endLine":21,"endColumn":47},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'loadPosts' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'createImportSpecifier' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["80"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [dispatch]",{"range":"83","text":"84"},[702,704],"[dispatch]"]