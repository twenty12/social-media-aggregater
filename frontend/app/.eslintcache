[{"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/index.tsx":"1","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/reportWebVitals.ts":"2","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/App.tsx":"3","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/index.tsx":"4","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/posts.tsx":"5","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/store.tsx":"6","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/reducer.tsx":"7","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/Header.tsx":"8","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/Feed.tsx":"9","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/teams.tsx":"10","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/PostCard.tsx":"11"},{"size":278,"mtime":1607371277059,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607181552009,"results":"14","hashOfConfig":"13"},{"size":498,"mtime":1607718843450,"results":"15","hashOfConfig":"13"},{"size":279,"mtime":1607191502951,"results":"16","hashOfConfig":"13"},{"size":1497,"mtime":1607722060102,"results":"17","hashOfConfig":"13"},{"size":428,"mtime":1607371257143,"results":"18","hashOfConfig":"13"},{"size":286,"mtime":1607272361902,"results":"19","hashOfConfig":"13"},{"size":372,"mtime":1607210413240,"results":"20","hashOfConfig":"13"},{"size":1623,"mtime":1607704616811,"results":"21","hashOfConfig":"13"},{"size":2018,"mtime":1607722038583,"results":"22","hashOfConfig":"13"},{"size":1804,"mtime":1607721466990,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"fzd65k",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/index.tsx",[],["53","54"],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/reportWebVitals.ts",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/App.tsx",["55","56"],"import React from 'react';\nimport NavBar from \"./features/Header\"\nimport Feed from \"./features/feed/Feed\"\nimport './App.css';\nimport { loadPosts } from \"./redux/modules/posts\"\nimport {useDispatch} from \"react-redux\"\nimport './index.css';\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            <NavBar />\n            {/* <button onClick={() => dispatch(loadPosts() as any)}>Load em</button> */}\n            <Feed />\n        </div>\n    );\n}\n\nexport default App;\n","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/index.tsx",[],["57","58"],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/posts.tsx",["59","60"],"import { typedAction } from './index';\nimport { Dispatch, AnyAction } from 'redux';\nimport { createImportSpecifier } from 'typescript';\n\n\nexport type Post = {\n    id: number,\n    account: number,\n    created: string,\n    collected: string,\n    title: string,\n    description: string,\n    url: string\n    source_id?: string,\n}\n\nexport type PostState = {\n    posts: Post[];\n    loading: boolean;\n};\n\nconst initialState: PostState = {\n    posts: [],\n    loading: true,\n};\n\nconst getServerUrl = () => {\n    if (process.env.NODE_ENV == 'development') {\n        return 'http://localhost:8000/'\n    } else {\n        return 'https://social-media-aggregater.herokuapp.com/'\n    }\n}\n\nexport const addPosts = (products: Post[]) => {\n    return typedAction('posts/ADD_POSTS', products);\n};\n\nexport const loadPosts = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        fetch(getServerUrl() + \"api/posts/\")\n            .then(res => res.json())\n            .then((result) => {\n                dispatch(\n                    addPosts(result['results'])\n                );\n            })\n    };\n};\n\ntype PostAction = ReturnType<typeof addPosts>;\n\nexport function postReducer(\n    state = initialState,\n    action: PostAction\n): PostState {\n    switch (action.type) {\n        case 'posts/ADD_POSTS':\n            return {\n                ...state,\n                loading: false,\n                posts: [...state.posts, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/store.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/reducer.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/Header.tsx",[],"/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/Feed.tsx",["61"],"import React, { useEffect, FunctionComponent } from 'react'\nimport PostCard from './PostCard'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { loadPosts } from \"../../redux/modules/posts\"\nimport { loadAccounts } from \"../../redux/modules/teams\"\nimport { RootState } from \"../../redux/reducer\"\n\nconst arrToObjKeyedById = (arr: any) => {\n    return arr.reduce(function (acc: any, cur: any, i: number) {\n        acc[cur['id']] = cur;\n        return acc;\n    }, {});\n}\n\nconst Feed: FunctionComponent = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadAccounts() as any)\n        dispatch(loadPosts() as any)\n        // dispatch(loadBoats() as any)\n    }, [])\n    const posts = useSelector((state: RootState) => state.post.posts)\n    const loading = useSelector((state: RootState) => state.post.loading)\n    const accounts = arrToObjKeyedById(\n        useSelector((state: RootState) => state.team.accounts))\n\n    const postItems = posts.map((post) => {\n        const getAccountDataWhenOnceAvailable = () => (Object.keys(accounts).length === 0) ? {} : accounts[post.account!]\n        // const getBoatDataWhenOnceAvailable = () => (Object.keys(boats).length === 0) ? {} : boats[post.boatId!]\n        return <PostCard\n            postData={post}\n            accountData={getAccountDataWhenOnceAvailable()} />\n        // boatData={getBoatDataWhenOnceAvailable()}/>\n    })\n    if (loading) {\n        return <h1>Loading...</h1>\n    } else {\n        return (\n            <div className=\"container\">\n                {postItems}\n            </div>\n        )\n    }\n}\n\nexport default Feed","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/redux/modules/teams.tsx",["62"],"import { typedAction } from './index';\nimport { Dispatch, AnyAction } from 'redux';\nconst getServerUrl = () => {\n    if (process.env.NODE_ENV == 'development') {\n        return 'http://localhost:8000/'\n    } else {\n        return 'https://social-media-aggregater.herokuapp.com/'\n    }\n}\nexport type Account = {\n    id: number,\n    sailor: Sailor,\n    team?: Team,\n    platform: string,\n    account_id: string,\n    account_name: string,\n    flag: string\n}\n\nexport type Sailor = {\n    id: number,\n    name: string,\n    gender: string\n    age: number,\n    boat?: Boat,\n    team?: Team\n}\n\nexport type Boat = {\n    id: number,\n    name: string,\n    built: string\n}\n\nexport type Team = {\n    name: string,\n    boat: Boat\n};\n\nexport type AccountState = {\n    accounts: Account[]\n}\n\nconst initialState: AccountState = {\n    accounts: []\n};\n\nexport const addAccount= (account:Account[]) => {\n    return typedAction('teams/ADD_ACCOUNT', account);\n};\n\n// export const addBoat = (boat:Boat[]) => {\n//     return typedAction('teams/ADD_BOAT', boat);\n// };\n\n// export const loadBoats = () => {\n//     return (dispatch: Dispatch<AnyAction>) => {\n//         setTimeout(() => {\n//             dispatch(\n//                 addBoat(boatData['boats'])\n//             );\n//         }, 1000);\n//     };\n// };\n\nexport const loadAccounts = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        fetch(getServerUrl() + \"api/accounts/\")\n            .then(res => res.json())\n            .then((result) => {\n                console.log(result['results'])\n                dispatch(\n                    addAccount(result['results'])\n                );\n            })\n    };\n};\n\ntype ActionType = ReturnType<typeof addAccount>;\n\nexport function teamReducer(state = initialState, action: ActionType) {\n    switch (action.type) {\n        case 'teams/ADD_ACCOUNT':\n            return {\n                ...state,\n                accounts: [...state.accounts, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","/Users/danielgladstone/Documents/social-media-aggregater/frontend/app/src/features/feed/PostCard.tsx",["63"],"import React, { FunctionComponent } from \"react\"\nimport { Post } from '../../redux/modules/posts'\nimport { Account } from '../../redux/modules/teams'\n\ntype PostProps = {\n    postData: Post,\n    accountData: Account\n    // sailorData: Sailor,\n    // boatData: Boat\n}\n\nvar nameToEmoji: { [key: string]: string; } = {\n    UK: '🇬🇧',\n    JPN: '🇯🇵',\n};\n\n\nconst PostCard: FunctionComponent<PostProps> = ({ postData, accountData }) => {\n    const header = () => {\n        if (Object.keys(accountData).length != 0) {\n            return (\n                <div className=\"d-flex\">\n                    <div className=\"mr-auto\">{accountData.sailor.name} {nameToEmoji[accountData.flag]}</div>\n\n                    {/* <small>{accountData.sailor.boat}</small> */}\n                </div>\n            )\n        }\n    }\nreturn (\n    <div key={postData.id} className=\"row justify-content-center\">\n        <div className=\"my-2 col-8\">\n            <div className=\"card border-dark\">\n                <div className=\"card-header bg-white border-0\">\n                    {header()}\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"embed-responsive embed-responsive-16by9\">\n                        <iframe\n                            className=\"embed-responsive-item border-0\"\n                            src={`https://www.youtube.com/embed/${postData.source_id}`}\n                            allow='autoplay; encrypted-media'\n                            title='video'\n                        />\n                    </div>\n                </div>\n                <div className=\"card-footer bg-white border-0 pt-0\">\n                    <small>{postData.created}</small>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n}\nexport default PostCard",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":10,"column":11,"nodeType":"70","messageId":"71","endLine":10,"endColumn":19},{"ruleId":"64","replacedBy":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","severity":1,"message":"75","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":28,"column":30,"nodeType":"78","messageId":"79","endLine":28,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":21,"column":8,"nodeType":"82","endLine":21,"endColumn":10,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"77","line":4,"column":30,"nodeType":"78","messageId":"79","endLine":4,"endColumn":32},{"ruleId":"76","severity":1,"message":"84","line":20,"column":45,"nodeType":"78","messageId":"79","endLine":20,"endColumn":47},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'loadPosts' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.",["85"],["86"],"'createImportSpecifier' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["87"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [dispatch]",{"range":"90","text":"91"},[702,704],"[dispatch]"]