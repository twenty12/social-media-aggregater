{"version":3,"sources":["features/Header.tsx","features/feed/PostCard.tsx","redux/modules/index.tsx","redux/modules/posts.tsx","redux/modules/teams.tsx","features/feed/Feed.tsx","App.tsx","redux/reducer.tsx","redux/store.tsx","index.tsx"],"names":["NavBar","createdTag","className","href","nameToEmoji","UK","JPN","DE","FRN","CH","IT","PostCard","postData","accountData","useState","showThumb","setShowThumb","thumbDiv","src","thumbnail","videoDiv","source_id","allow","title","text","regex","created","Date","Object","keys","length","position","sailor","boat","name","toLocaleString","RegExp","split","map","str","test","flag","header","onClick","id","typedAction","type","payload","initialState","posts","loading","pageNumber","showInfo","loadPosts","dispatch","fetch","console","log","getServerUrl","getPageUrl","then","res","json","result","accounts","loadAccounts","Feed","useDispatch","useSelector","state","post","useEffect","loadingDiv","team","reduce","acc","cur","i","postItems","account","ref","useRef","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","current","disconnect","useOnScreen","updated","getInfoCard","App","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14b157b1.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function NavBar () {\n    const createdTag = <small>By <a className=\"text-black\" href=\"http://danielgladstone.com\">Daniel Gladstone</a></small>\n    return (\n        <nav className=\"navbar navbar-default border-bottom\">\n                <div className=\"w-100\">\n                    <div className=\"d-flex\">\n                        <span className=\"navbar-brand text-wrap\">\n                            <h1>Vend√©e Globe Tracker</h1>\n                        </span>\n                    </div>\n                    <div className=\"d-flex w-100 align-items-end\">\n                        <h4 className=\"mb-0\">All the content</h4>\n                        <div className=\"ml-auto d-flex align-items-end\">\n                            {createdTag}\n                        </div>\n                    </div>\n                </div>\n        </nav>\n    )\n}","import React, { FunctionComponent, useEffect, useState } from \"react\"\nimport { Post } from '../../redux/modules/posts'\nimport { Account } from '../../redux/modules/teams'\n\ntype PostProps = {\n    postData: Post,\n    accountData: Account\n    // sailorData: Sailor,\n    // boatData: Boat\n}\n\nvar nameToEmoji: { [key: string]: string; } = {\n    UK: 'üá¨üáß',\n    JPN: 'üáØüáµ',\n    DE: 'üá©üá™',\n    FRN: 'üá´üá∑',\n    CH: 'üá®üá≠',\n    IT: 'üáÆüáπ'\n};\nconst wrapTags = (text: string, regex: RegExp, className?: string) => {\n    const textArray = text.split(regex);\n    return textArray.map(str => {\n      if (RegExp(':').test(str)) {\n        return <span className=\"d-block d-md-inline\">{str}</span>;\n      }\n      return str;\n    });\n  };\n\nconst PostCard: FunctionComponent<PostProps> = ({ postData, accountData }) => {\n    const [showThumb, setShowThumb] = useState(true)\n    //https://leewarrick.com/blog/a-guide-to-usestate-and-usereducer/\n    const header = () => {\n        const created: Date = new Date(postData.created)\n        if (Object.keys(accountData).length != 0) {\n            const position = accountData.sailor.boat?.position === 0 ? 'RET' : accountData.sailor.boat?.position\n            return (\n                <div>\n                    <div className=\"d-flex\">\n                        <div className=\"mr-auto \">{accountData.sailor.name}</div>\n                        <small className=\"mt-2 mb-n2\">{wrapTags(created.toLocaleString(), RegExp(','), 'dog')}</small>\n                    </div>\n                    <small><i>{accountData.sailor.boat?.name} {nameToEmoji[accountData.flag]} </i></small><br></br>\n                    <small>Position: {position}</small>\n                </div>\n            )\n        }\n    }\n\n    const handleClick = () => setShowThumb(false)\n    const thumbDiv = <img className=\"img-fluid\" src={postData.thumbnail} />\n    // const thumbDiv = <img className=\"img-fluid\" src={`http://i.ytimg.com/vi/${postData.source_id}/maxresdefault.jpg`}  onError={(e)=>{console.log(e)}}/>\n    const videoDiv = <div className=\"embed-responsive embed-responsive-16by9\">\n        <iframe\n            className=\"embed-responsive-item border-0\"\n            src={`https://www.youtube.com/embed/${postData.source_id}?&autoplay=1`}\n            allow='autoplay; encrypted-media'\n            title='video'\n        />\n    </div>\n\n    return (\n        <div key={postData.id} className=\"row justify-content-center\">\n            <div className=\"my-2 col-sm-12 col-md-8\">\n                <div className=\"card border-dark\">\n                    <div className=\"card-header bg-white border-0 pb-0\">\n                        {header()}\n                    </div>\n                    <div onClick={handleClick} className=\"card-body d-flex justify-content-center\">\n                        { showThumb ? thumbDiv : videoDiv }\n                    </div>\n                    <div className=\"card-footer bg-white border-0 pt-0\">\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default PostCard","export function typedAction<T extends string>(type: T): { type: T };\n\nexport function typedAction<T extends string, P extends any>(\n    type: T,\n    payload: P\n): { type: T; payload: P };\n\nexport function typedAction(type: string, payload?: any) {\n    return { type, payload };\n}","import { typedAction } from './index';\nimport { Dispatch, AnyAction } from 'redux';\nimport { createImportSpecifier } from 'typescript';\n\n\nexport type Post = {\n    id: number,\n    account: number,\n    created: string,\n    collected: string,\n    title: string,\n    description: string,\n    url: string\n    source_id?: string,\n    thumbnail?: string,\n}\n\nexport type PostState = {\n    posts: Post[];\n    loading: boolean;\n    pageNumber: number;\n    showInfo: boolean;\n};\n\nconst initialState: PostState = {\n    posts: [],\n    loading: true,\n    pageNumber: 1,\n    showInfo: false\n};\n\nconst getServerUrl = () => {\n    if (process.env.NODE_ENV == 'development') {\n        return 'http://localhost:8000/'\n    } else {\n        return 'https://social-media-aggregater.herokuapp.com/'\n    }\n}\n\nconst getPageUrl = (pageNumber:number) => {\n    console.log(pageNumber)\n    return getServerUrl() + \"api/posts/?page=\" + pageNumber\n}\nexport const addPosts = (products: Post[]) => {\n    return typedAction('posts/ADD_POSTS', products);\n};\n\nexport const loadPosts = (pageNumber:number) => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        fetch(getPageUrl(pageNumber))\n            .then(res => res.json())\n            .then((result) => {\n                dispatch(\n                    addPosts(result['results'])\n                );\n            })\n    };\n};\n\ninterface ActionB {\n    type: 'posts/TOGGLE_INFO';\n}\nexport const toggleInfo = () => {\n    return typedAction('posts/TOGGLE_INFO');\n};\n\ntype PostAction = ReturnType<typeof addPosts> | ActionB;\n\nexport function postReducer(\n    state = initialState,\n    action: PostAction\n): PostState {\n    switch (action.type) {\n        case 'posts/ADD_POSTS':\n            return {\n                ...state,\n                loading: false,\n                pageNumber: state.pageNumber + 1,\n                posts: [...state.posts, ...action.payload],\n            };\n        case 'posts/TOGGLE_INFO':\n            return {\n                ...state,\n                showInfo: !state.showInfo\n            };\n        default:\n            return state;\n    }\n}","import { typedAction } from './index';\nimport { Dispatch, AnyAction } from 'redux';\nconst getServerUrl = () => {\n    if (process.env.NODE_ENV == 'development') {\n        return 'http://localhost:8000/'\n    } else {\n        return 'https://social-media-aggregater.herokuapp.com/'\n    }\n}\nexport type Account = {\n    id: number,\n    sailor: Sailor,\n    team?: Team,\n    platform: string,\n    account_id: string,\n    account_name: string,\n    flag: string,\n    updated: string\n}\n\nexport type Sailor = {\n    id: number,\n    name: string,\n    gender: string\n    age: number,\n    boat?: Boat,\n    team?: Team\n}\n\nexport type Boat = {\n    id: number,\n    name?: string,\n    built: string,\n    position?: number\n}\n\nexport type Team = {\n    name: string,\n    boat: Boat\n};\n\nexport type AccountState = {\n    accounts: Account[]\n}\n\nconst initialState: AccountState = {\n    accounts: []\n};\n\nexport const addAccount= (account:Account[]) => {\n    return typedAction('teams/ADD_ACCOUNT', account);\n};\n\n// export const addBoat = (boat:Boat[]) => {\n//     return typedAction('teams/ADD_BOAT', boat);\n// };\n\n// export const loadBoats = () => {\n//     return (dispatch: Dispatch<AnyAction>) => {\n//         setTimeout(() => {\n//             dispatch(\n//                 addBoat(boatData['boats'])\n//             );\n//         }, 1000);\n//     };\n// };\n\nexport const loadAccounts = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        fetch(getServerUrl() + \"api/accounts/\")\n            .then(res => res.json())\n            .then((result) => {\n                dispatch(\n                    addAccount(result['results'])\n                );\n            })\n    };\n};\n\ntype ActionType = ReturnType<typeof addAccount>;\n\nexport function teamReducer(state = initialState, action: ActionType) {\n    switch (action.type) {\n        case 'teams/ADD_ACCOUNT':\n            return {\n                ...state,\n                accounts: [...state.accounts, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","import React, { useEffect, FunctionComponent, useState, useRef } from 'react'\nimport PostCard from './PostCard'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { loadPosts, toggleInfo } from \"../../redux/modules/posts\"\nimport { loadAccounts, Account } from \"../../redux/modules/teams\"\nimport { RootState } from \"../../redux/reducer\"\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\n\nconst arrToObjKeyedById = (arr: any) => {\n    return arr.reduce(function (acc: any, cur: any, i: number) {\n        acc[cur['id']] = cur;\n        return acc;\n    }, {});\n}\n\nfunction useOnScreen(ref: any) {\n\n    const [isIntersecting, setIntersecting] = useState(false)\n\n    const observer = new IntersectionObserver(\n        ([entry]) => setIntersecting(entry.isIntersecting)\n    )\n\n    useEffect(() => {\n        observer.observe(ref.current)\n        // Remove the observer as soon as the component is unmounted\n        return () => { observer.disconnect() }\n    }, [])\n\n    return isIntersecting\n}\n\nconst Feed: FunctionComponent = () => {\n    const dispatch = useDispatch()\n    const pageNumber = useSelector((state: RootState) => state.post.pageNumber)\n    const showInfo = useSelector((state: RootState) => state.post.showInfo)\n    useEffect(() => {\n        dispatch(loadAccounts() as any)\n        dispatch(loadPosts(pageNumber) as any)\n        // dispatch(loadBoats() as any)\n    }, [])\n    const posts = useSelector((state: RootState) => state.post.posts)\n    const loading = useSelector((state: RootState) => state.post.loading)\n    const loadingDiv = (loading) ? <h1>Loading...</h1> : ''\n    const accounts = arrToObjKeyedById(\n        useSelector((state: RootState) => state.team.accounts))\n\n    const postItems = posts.map((post) => {\n        const getAccountDataWhenOnceAvailable = () => (Object.keys(accounts).length === 0) ? {} : accounts[post.account!]\n        // const getBoatDataWhenOnceAvailable = () => (Object.keys(boats).length === 0) ? {} : boats[post.boatId!]\n        return <PostCard\n            postData={post}\n            accountData={getAccountDataWhenOnceAvailable()} />\n    })\n    \n    const ref = useRef<HTMLHeadingElement>(null);\n    const isVisible = useOnScreen(ref)\n    if (isVisible && pageNumber > 1) {\n        console.log('loaded')\n        dispatch(loadPosts(pageNumber) as any)\n    }\n    const getDateString = (updated: string) => {\n        const created: Date = new Date(updated)\n        return created.toLocaleString()\n    }\n    const getInfoCard = () => {\n        console.log(accounts)\n        if (showInfo) {\n            return (\n                <div className=\"col-sm-12 mt-1 col-md-8 d-flex\">\n                    <div className=\"card border-dark w-100 \">\n                        <div className=\"card-body py-1\">\n                            <div><small>Accounts monitored: {Object.keys(accounts).length}</small></div>\n                            <div><small>Last updated: { (Object.keys(accounts).length < 2 ? 'a' : getDateString(accounts['1'].updated))}</small></div>\n                            {/* <div><small>Last updated race positions: { (Object.keys(accounts).length < 2 ? 'a' : getDateString(accounts['1'].updated))}</small></div> */}\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-sm-12 mt-1 col-md-8 d-flex\">\n                    <AiOutlineInfoCircle onClick={() => dispatch(toggleInfo() as any)} />\n                </div>\n                {getInfoCard()}\n            </div>\n            {postItems}\n            {loadingDiv}\n            <div ref={ref}></div>\n        </div>\n    )\n}\n\nexport default Feed","import React from 'react';\nimport NavBar from \"./features/Header\"\nimport Feed from \"./features/feed/Feed\"\nimport './App.css';\nimport { loadPosts } from \"./redux/modules/posts\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport './index.css';\nimport { RootState } from \"./redux/reducer\"\n\nfunction App() {\n    const dispatch = useDispatch()\n    const pageNumber = useSelector((state: RootState) => state.post.pageNumber)\n\n    return (\n        <div>\n            <NavBar />\n            {/* <button onClick={() => dispatch(loadPosts(pageNumber) as any)}>Load em</button> */}\n            <Feed />\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { postReducer } from './modules/posts';\nimport { teamReducer } from './modules/teams';\n\nexport const rootReducer = combineReducers({\n    post: postReducer,\n    team: teamReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;","import { createStore, applyMiddleware, compose } from 'redux'\nimport {rootReducer} from './reducer'\nimport thunk from \"redux-thunk\"\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n  }\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}