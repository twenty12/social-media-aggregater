{"version":3,"sources":["features/Header.tsx","features/feed/PostCard.tsx","redux/modules/index.tsx","redux/modules/mock_data.js","redux/modules/posts.tsx","redux/modules/teams.tsx","features/feed/Feed.tsx","App.tsx","redux/reducer.tsx","redux/store.tsx","index.tsx"],"names":["NavBar","className","nameToEmoji","UK","PostCard","postData","sailorData","boatData","name","flag","src","sourceId","allow","title","id","typedAction","type","payload","feedUpdate","source","publishTime","description","image","url","sailorId","boatId","gender","age","position","initialState","posts","loading","loadPosts","dispatch","setTimeout","boats","sailors","loadBoats","loadSailors","arrToObjKeyedById","arr","reduce","acc","cur","i","Feed","useDispatch","useEffect","useSelector","state","post","team","postItems","map","Object","keys","length","App","onClick","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.171fd8fd.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function NavBar () {\n    return (\n        <nav className=\"navbar navbar-default border-bottom\">\n            <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                    <span className=\"navbar-brand\"><h1>VendÃ©e</h1></span>\n                </div>\n            </div>\n        </nav>\n    )\n}","import React, { FunctionComponent } from \"react\"\nimport { Post } from '../../redux/modules/posts'\nimport { Boat, Sailor } from '../../redux/modules/teams'\n\ntype PostProps = {\n    postData: Post,\n    sailorData: Sailor,\n    boatData: Boat\n}\n\nvar nameToEmoji: { [key: string]: string; } = {\n    UK: 'ðŸ‡¬ðŸ‡§'\n};\n\n\nconst PostCard: FunctionComponent<PostProps> = ({ postData, sailorData, boatData }) => {\n    return (\n        <div key={postData.id} className=\"row justify-content-center\">\n            <div className=\"my-2 col-8\">\n                <div className=\"card border-dark\">\n                    <div className=\"card-header bg-white border-0\">\n                        <div className=\"d-flex\">\n                            <div className=\"mr-auto\">{sailorData.name}</div>\n                            {nameToEmoji[boatData.flag]}\n                        </div>\n                        <small>{boatData.name}</small>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"embed-responsive embed-responsive-16by9\">\n                        <iframe\n                            className=\"embed-responsive-item border-0\"\n                            src={`https://www.youtube.com/embed/${postData.sourceId}`}\n                            allow='autoplay; encrypted-media'\n                            title='video'\n                        />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default PostCard","export function typedAction<T extends string>(type: T): { type: T };\n\nexport function typedAction<T extends string, P extends any>(\n    type: T,\n    payload: P\n): { type: T; payload: P };\n\nexport function typedAction(type: string, payload?: any) {\n    return { type, payload };\n}","export const feedUpdate = {\n    created: \"2020-12-05T08:02:54Z\",\n    posts: [\n        {\n            id: 1,\n            source: 'YouTube',\n            publishTime: '2020-12-05T07:02:54Z',\n            title: 'Some New Video',\n            description: 'A video description.',\n            image: '',\n            url: 'https://www.youtube.com/watch?v=8RfWWMMWPy8&ab_channel=PipHareOceanRacing',\n            sourceId: \"8RfWWMMWPy8\",\n            sailorId: 1,\n            boatId: 1\n        },\n        {\n            id: 2,\n            source: 'YouTube',\n            publishTime: '2020-11-05T07:02:54Z',\n            title: 'Some New Video 2',\n            description: 'A video description.2',\n            image: '',\n            sourceId: \"8RfWWMMWPy8\",\n            url: 'https://www.youtube.com/watch?v=AETzg6ACmSc&ab_channel=PipHareOceanRacing',\n            sailorId: 1,\n            boatId: 1\n        }\n    ]\n}\nexport const sailorData = {\n    created: \"2020-12-05T08:02:54Z\",\n    sailors: [\n        {\n            id: 1,\n            name: 'Pip Hare',\n            gender: 'F',\n            age: 46,\n            boatId: 1\n        },\n        {\n            id: 5,\n            name: 'Daniel',\n            gender: 'M',\n            age: 31,\n            boatId: 1\n        }\n    ]\n}\n\nexport const boatData = {\n    created: \"2020-12-05T08:02:54Z\",\n    boats: [\n        {\n            id: 1,\n            name: 'Medellia',\n            flag: 'UK',\n            position: 34\n        }\n    ]\n}","import { typedAction } from './index';\nimport { Dispatch, AnyAction } from 'redux';\n\nimport {feedUpdate} from \"./mock_data\"\n\nexport type Post = {\n    id: number,\n    source: string,\n    publishTime: string,\n    title: string,\n    description: string,\n    image: string,\n    url: string\n    sourceId?: string,\n    boatId?: number,\n    sailorId?: number\n}\n\nexport type PostState = {\n    posts: Post[];\n    loading: boolean;\n};\n\nconst initialState: PostState = {\n    posts: [],\n    loading: true,\n};\n\nexport const addPosts = (products: Post[]) => {\n    return typedAction('posts/ADD_POSTS', products);\n};\n\nexport const loadPosts = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        setTimeout(() => {\n            dispatch(\n                addPosts(feedUpdate['posts'])\n            );\n        }, 1000);\n    };\n};\n\ntype PostAction = ReturnType<typeof addPosts>;\n\nexport function postReducer(\n    state = initialState,\n    action: PostAction\n): PostState {\n    switch (action.type) {\n        case 'posts/ADD_POSTS':\n            return {\n                ...state,\n                loading: false,\n                posts: [...state.posts, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","import { typedAction } from './index';\nimport { Dispatch, AnyAction } from 'redux';\n\nimport {sailorData, boatData} from \"./mock_data\"\n\nexport type Sailor = {\n    id: number,\n    name: string,\n    gender: string\n    age: number,\n    boatId: number\n}\n\n\nexport type Boat = {\n    id: number,\n    name: string,\n    position: number,\n    flag: string\n}\n\nexport type TeamState = {\n    sailors: Sailor[],\n    boats: Boat[]\n};\n\nconst initialState: TeamState = {\n    boats: [],\n    sailors: []\n};\n\nexport const addSailor = (sailor:Sailor[]) => {\n    return typedAction('teams/ADD_SAILOR', sailor);\n};\n\nexport const addBoat = (boat:Boat[]) => {\n    return typedAction('teams/ADD_BOAT', boat);\n};\n\nexport const loadBoats = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        setTimeout(() => {\n            dispatch(\n                addBoat(boatData['boats'])\n            );\n        }, 1000);\n    };\n};\n\nexport const loadSailors = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        setTimeout(() => {\n            dispatch(\n                addSailor(sailorData['sailors'])\n            );\n        }, 1000);\n    };\n};\n\ntype ActionType = ReturnType<typeof addBoat> | ReturnType<typeof addSailor>;\n\nexport function teamReducer(state = initialState, action: ActionType) {\n    switch (action.type) {\n        case 'teams/ADD_SAILOR':\n            return {\n                ...state,\n                sailors: [...state.sailors, ...action.payload],\n            };\n        case 'teams/ADD_BOAT':\n            return {\n                ...state,\n                boats: [...state.boats, ...action.payload],\n            };\n        default:\n            return state;\n    }\n}","import React, {useEffect, FunctionComponent} from 'react'\nimport PostCard from './PostCard'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { loadPosts } from \"../../redux/modules/posts\"\nimport { loadBoats, loadSailors } from \"../../redux/modules/teams\"\n\nimport {RootState} from \"../../redux/reducer\"\n\nconst arrToObjKeyedById = (arr: any) => {\n    return arr.reduce(function(acc: any, cur: any, i: number) {\n        acc[cur['id']] = cur;\n        return acc;\n      }, {});\n}\n\nconst Feed: FunctionComponent = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadPosts() as any)\n        dispatch(loadSailors() as any)\n        dispatch(loadBoats() as any)\n    }, [])\n    const posts = useSelector( (state: RootState) => state.post.posts)\n    const loading = useSelector( (state: RootState) => state.post.loading)\n    const sailors = arrToObjKeyedById(\n        useSelector( (state: RootState) => state.team.sailors))\n    const boats = arrToObjKeyedById(\n        useSelector( (state: RootState) => state.team.boats))\n\n    const postItems = posts.map((post) => {\n        const getSailorDataWhenOnceAvailable = () => (Object.keys(sailors).length === 0) ? {} : sailors[post.sailorId!]\n        const getBoatDataWhenOnceAvailable = () => (Object.keys(boats).length === 0) ? {} : boats[post.boatId!]\n        return <PostCard\n            postData={post}\n            sailorData={getSailorDataWhenOnceAvailable()}\n            boatData={getBoatDataWhenOnceAvailable()}/>\n      })\n      if (loading) {\n          return <h1>Loading...</h1>\n      } else {\n        return (\n            <div className=\"container\">\n                {postItems}\n            </div>\n        )\n    }\n}\n\nexport default Feed","import React from 'react';\nimport NavBar from \"./features/Header\"\nimport Feed from \"./features/feed/Feed\"\nimport './App.css';\nimport { loadPosts } from \"./redux/modules/posts\"\nimport {useDispatch} from \"react-redux\"\nimport './index.css';\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            <NavBar />\n            <button onClick={() => dispatch(loadPosts() as any)}>Load em</button>\n            <Feed />\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { postReducer } from './modules/posts';\nimport { teamReducer } from './modules/teams';\n\nexport const rootReducer = combineReducers({\n    post: postReducer,\n    team: teamReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;","import { createStore, applyMiddleware, compose } from 'redux'\nimport {rootReducer} from './reducer'\nimport thunk from \"redux-thunk\"\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n  }\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}